(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"/+1d":function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/Input/InputPage",function(){return t("JUCr")}])},JUCr:function(n,e,t){"use strict";t.r(e);var l=t("d2TB"),a=t("ERkP"),o=t.n(a),r=t("GsAr"),i=t("lIm4"),s=t("pneb"),u=t("R5dR"),c=t("nFRM"),p=o.a.createElement,m=[{name:"description",types:"ReactChild",description:"Append a description to the input field."},{name:"error",types:["ReactChild","ReactChild[]"],description:p(o.a.Fragment,null,"Displays an error message for the field. Error message will be passed to the ",p(i.a,null,"Form.Group")," for display purposes.")},{name:"iconLeft",types:p(u.a,{href:"/Icons/IconsPage",as:"/icons"},"Icon"),description:p(o.a.Fragment,null,"Pass in an"," ",p(u.a,{href:"/Icons/IconsPage",as:"/icons"},"Icon")," ","component to display to the left of the text.")},{name:"iconRight",types:p(u.a,{href:"/Icons/IconsPage",as:"/icons"},"Icon"),description:p(o.a.Fragment,null,"Pass in an"," ",p(u.a,{href:"/Icons/IconsPage",as:"/icons"},"Icon")," ","component to display to the right of the text.")},{name:"label",types:"ReactChild",description:p(o.a.Fragment,null,"Label element for inputs. Component with auto generate ",p(i.a,null,"id"),"'s for the accessibility API.")}],d=function(n){return p(c.a,Object(s.a)({title:"Input",propList:m},n))},h=function(){return p(o.a.Fragment,null,p(l.H2,null,"Input.Description"),p(l.Text,null,"Supports all native ",p(i.a,null,"<p />")," element attributes."))},f=function(){return p(o.a.Fragment,null,p(l.H2,null,"Input.Error"),p(l.Text,null,"See"," ",p(u.a,{href:"/Form/FormPage",as:"/form#error"},"Forms.Error"),"."))},g=function(){return p(o.a.Fragment,null,p(l.H2,null,"Input.Label"),p(l.Text,null,"See"," ",p(u.a,{href:"/Form/FormPage",as:"/form#label"},"Forms.Label"),"."))},I=o.a.createElement;e.default=function(){return I(o.a.Fragment,null,I(l.H0,null,"Input"),I(l.Text,null,"Inputs are stylized form controls with the ability of controling validation."," ",I(l.Link,{href:"https://design.bigcommerce.com/components/text-field",target:"_blank"},"Text Field Design Guidelines"),"."),I(r.a,null,'function Example() {\n  const [value, setValue] = React.useState(\'\');\n\n  const handleChange = event => setValue(event.target.value);\n\n  return (\n    <Form>\n      <Form.Group>\n        <Input\n          label="Label"\n          description="Description for the input."\n          placeholder="Placeholder"\n          type="text"\n          value={value}\n          onChange={handleChange}\n        />\n      </Form.Group>\n    </Form>\n  );\n}'),I(l.H1,null,"API"),I(l.Text,null,"Supports all native ",I(i.a,null,"<input />")," element attributes."),I(d,null),I(h,null),I(f,null),I(g,null),I(l.H1,null,"Error State"),I(l.Text,null,"Inputs allow you to pass in an ",I(i.a,{primary:!0},"error")," message that will control the styles of an input. The logic on the input can be controlled with the ",I(i.a,{primary:!0},"onChange")," prop."),I(r.a,null,'<Form>\n  <Form.Group>\n    <Input\n      label="Email Address"\n      description="Provide a valid email address."\n      value="example@"\n      error="Email address must contain a domain name."\n      onChange={() => null}\n    />\n  </Form.Group>\n</Form>'),I(l.H1,null,"Icons"),I(l.Text,null,"Inputs can also contain icons via the ",I(i.a,null,"iconLeft")," & ",I(i.a,null,"iconRight")," props."),I(r.a,null,'<Form>\n  <Form.Group>\n    <Input label="Example" placeholder="Example" iconLeft={<CheckCircleIcon color="success" />} />\n    <Input label="Example" placeholder="Example" iconRight={<CheckCircleIcon color="success" />} />\n  </Form.Group>\n</Form>'))}}},[["/+1d",0,1]]]);