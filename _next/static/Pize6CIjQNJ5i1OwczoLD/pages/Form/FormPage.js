(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{XWwo:function(e,n,r){"use strict";r.r(n);var l=r("d2TB"),o=r("ERkP"),t=r.n(o),a=r("lIm4"),u=r("GsAr"),i=r("pneb"),p=r("nFRM"),s=t.a.createElement,m=function(e){var n=e.id;return s(t.a.Fragment,null,s(l.H2,{id:n},"Form.Error"),s(l.Text,null,"Supports all native ",s(a.a,null,"<p />")," element attributes."))},d=[{name:"fullWidth",types:"boolean",defaultValue:"false",description:"Sets the form width to 100%"}],c=[{name:"description",types:"ReactChild",description:"Pass in a description to display in the fieldset."},{name:"legend",types:"ReactChild",description:"Pass in a legend to display in the fieldset."}],h=function(e){return s(p.a,Object(i.a)({title:"Form.Fieldset",propList:c},e))},F=function(e){var n=e.id;return s(t.a.Fragment,null,s(l.H2,{id:n},"Form.Label"),s(l.Text,null,"Supports all native ",s(a.a,null,"<label />")," element attributes."))},b=[{name:"errors",types:["React.ReactChild","React.ReactChild[]"],description:"Pass error(s) into the form group to override child input errors."}],g=function(e){return s(t.a.Fragment,null,s(l.Text,null,"Supports all native ",s(a.a,null,"<form />")," element attributes."),s(p.a,Object(i.a)({title:"Form",propList:d},e)))},G=function(e){return s(p.a,Object(i.a)({title:"Form.Group",propList:b},e))},v=t.a.createElement;n.default=function(){return v(t.a.Fragment,null,v(l.H0,null,"Forms"),v(l.Text,null,"Form fields are essential to any website or web application. ",v(a.a,null,"id"),"'s' will be auto-generated for input/textarea and labels ",v(a.a,null,"for")," attribute, unless manually specifying one."," ",v(l.Link,{href:"https://design.bigcommerce.com/components/forms",target:"_blank"},"Form Fields Design Guidelines"),"."),v(u.a,null,'<Form>\n  <Form.Group>\n    <Input\n      label="Email"\n      type="email"\n      description="Please provide a valid email address."\n      placeholder="Email address"\n    />\n  </Form.Group>\n  <Form.Group>\n    <Input label="Password" type="password" placeholder="Password" />\n  </Form.Group>\n  <Box marginTop="xxLarge">\n    <Button>Sign In</Button>\n  </Box>\n</Form>'),v(l.H1,null,"API"),v(g,null),v(m,{id:"error"}),v(h,null),v(F,{id:"label"}),v(G,null),v(l.H1,null,"Input Types"),v(l.Text,null,"BigDesign comes with various input types: ",v(a.a,null,"Input"),", ",v(a.a,null,"Checkbox"),", ",v(a.a,null,"Radio"),","," ",v(a.a,null,"Select"),", and ",v(a.a,null,"Textarea"),"."),v(u.a,null,'<Form>\n  <Form.Group>\n    <Input label="Example Input" placeholder="Example" />\n  </Form.Group>\n  <Form.Group>\n    <Checkbox checked={true} onChange={() => null} label="Example Checkbox" />\n  </Form.Group>\n  <Form.Group>\n    <Radio checked={true} onChange={() => null} label="Example Radio" />\n  </Form.Group>\n  <Form.Group>\n    <Select\n      label="Example Select"\n      onItemChange={() => null}\n      options={[\n        { value: 1, content: \'Option\' },\n        { value: 2, content: \'Option\' },\n        { value: 3, content: \'Option\' },\n        { value: 4, content: \'Option\' },\n      ]}\n      placeholder="Example"\n    />\n  </Form.Group>\n  <Form.Group>\n    <Textarea label="Example Textarea" placeholder="Example" />\n  </Form.Group>\n</Form>'),v(l.H1,null,"Layout"),v(l.Text,null,"You can up to 3 ",v(a.a,null,"Input")," components in row to add more dimension to a ",v(a.a,null,"Form.Group"),"."," ",v(a.a,null,"Radio")," and ",v(a.a,null,"Checkbox")," components will never display inline inside a ",v(a.a,null,"Form.Group"),"."),v(u.a,null,'<Form>\n  <Form.Group>\n    <Input label="Company" placeholder="BigCommerce" required />\n  </Form.Group>\n  <Form.Group>\n    <Input label="First Name" placeholder="John" required />\n    <Input label="Last Name" placeholder="Doe" required />\n  </Form.Group>\n  <Form.Group>\n    <Input label="City" placeholder="Austin" required />\n    <Input label="State" placeholder="Texas" required />\n    <Input label="Postal Code" placeholder="78726" required />\n  </Form.Group>\n  <Form.Fieldset legend="Shipping Method">\n    <Form.Group>\n      <Radio label="Free \u2013 Three Day Shipping" checked onChange={() => null} />\n      <Radio label="$4.99 \u2013 Two Day Shipping" />\n      <Radio label="$9.99 \u2013 One Day Shipping" />\n    </Form.Group>\n  </Form.Fieldset>\n</Form>'),v(l.H1,null,"Validation"),v(l.Text,null,"All form controls are tied to ",v(a.a,{primary:!0},"onChange")," or equivalent event handlers. Validation messages can be passed through the ",v(a.a,null,"error")," prop. All input errors in an ",v(a.a,null,"Form.Group")," will appear at the bottom of the group component component."),v(u.a,null,'function Example() {\n  const ERROR_MSG = \'Must be less than or equal to 3 characters long.\';\n\n  const [value, setValue] = React.useState(\'BigCommerce\');\n  const [error, setError] = React.useState(ERROR_MSG);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  const handleChange = event => {\n    const { target } = event;\n    const regex = RegExp(target.pattern, \'g\');\n\n    regex.test(target.value) ? setError(\'\') : setError(ERROR_MSG);\n\n    setValue(target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group>\n        <Input\n          label="Example"\n          description="Remove characters to preview validation."\n          value={value}\n          error={error}\n          onChange={handleChange}\n          pattern="^.{1,3}$"\n          required\n        />\n      </Form.Group>\n      <Form.Group>\n        <Input label="City" error="You must enter a valid City." placeholder="Austin" required />\n        <Input label="State" placeholder="Texas" required />\n        <Input label="Postal Code" error="You must enter a valid Postal Code." placeholder="78726" required />\n      </Form.Group>\n    </Form>\n  );\n}'))}},ybwp:function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/Form/FormPage",function(){return r("XWwo")}])}},[["ybwp",0,1]]]);